(this.webpackJsonpciphers=this.webpackJsonpciphers||[]).push([[0],{181:function(e,t,a){},182:function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),l=a(21),o=a.n(l),s=(a(83),a(77)),i=a(17),c=a(6);class h extends n.Component{render(){return r.a.createElement(c.a,null,r.a.createElement("br",null),r.a.createElement("h1",null,"What Are Ciphers?"),r.a.createElement("p",null,"A cipher is an algorithm for encrypting or decrypting a message. There are many different types of ciphers, some more classical and others more modern. Currently we have some of the more common simple classical ciphers."),r.a.createElement("br",null),r.a.createElement("h5",null,"Common Classical Types"),r.a.createElement("ul",null,r.a.createElement("li",null,"Substitution Ciphers (monoalphabetic)"),r.a.createElement("li",null,"Polyalphabetic Ciphers"),r.a.createElement("li",null,"Transposition Ciphers")),r.a.createElement("br",null),r.a.createElement("h5",null,"Resources"),r.a.createElement("p",null,"'The Code Book: The Science of Secrecy from Ancient Egypt to Quantum Cryptography' by Simon Singh is an excellent resource to learn about Cryptography and its history."))}}var u=h,d=a(36),m=a(5);class p extends n.Component{render(){return r.a.createElement(d.a,{responsive:"md",size:"xl"},r.a.createElement("thead",null,r.a.createElement("tr",null,r.a.createElement("th",null,"Shifted by"),r.a.createElement("th",null,"Result"))),r.a.createElement("tbody",null,this.props.shifts.map((function(e,t){return r.a.createElement("tr",{key:"shift-"+t.toString()},r.a.createElement("td",null,t+1),r.a.createElement("td",null,r.a.createElement(m.a.Control,{as:"textarea",rows:"2",plaintext:!0,value:e,readOnly:!0})))}))))}}var g=p;function y(e,t){e=e.toUpperCase();for(var a="",n=0;n<e.length;n++)if(e.charCodeAt(n)>=65&&e.charCodeAt(n)<=90){var r=e.charCodeAt(n)+t;r>90&&(r-=26),a+=String.fromCharCode(r)}else a+=e.charAt(n);return a}class E extends n.Component{constructor(e){super(e),this.handleChange=this.handleChange.bind(this),this.state={input:""}}handleChange(e){this.setState({input:e.target.value})}render(){const e=function(e){for(var t=[],a=1;a<26;a++)t.push(y(e,a));return t}(this.state.input);return r.a.createElement(c.a,{fluid:!0},r.a.createElement(c.a,null,r.a.createElement("h1",null,"Caesar Shift Cipher"),r.a.createElement("p",null,'A Caesar cipher is a very simple substituion cipher. It is done by shifting the whole alphabet by a certain amount and then using that alphabet to encrypt/decrypt the message. For example, if we were to encrypt the message "A dog jumped over the fence." with a shift of 5, the encrypted message would be "F ITL OZRUJI TAJW YMJ KJSHJ.".'),r.a.createElement("h5",null,"Encrypting/Decrypting"),r.a.createElement(m.a.Group,{controlId:"caesar-input"},r.a.createElement(m.a.Label,null,"Enter text to see shifts:"),r.a.createElement(m.a.Control,{as:"textarea",rows:"3",onChange:this.handleChange,placeholder:"Enter Text"}),r.a.createElement(m.a.Text,{className:"text-muted"},"Any characters that are not alphabetical will be ignored and unchanged!")),r.a.createElement(c.a,{className:"output-shifts"},r.a.createElement("h2",{className:"center"},"Shifts"),r.a.createElement("div",{id:"caesar-output"},r.a.createElement(g,{shifts:e})))))}}var f=E;class b extends n.Component{render(){return r.a.createElement(c.a,{className:"output"},r.a.createElement("h2",{className:"center"},"Output"),r.a.createElement("div",{id:this.props.id},this.props.text&&r.a.createElement(m.a.Control,{as:"textarea",rows:"2",plaintext:!0,value:this.props.text,readOnly:!0})))}}var C=b;class w extends n.Component{render(){return r.a.createElement(m.a,null,r.a.createElement(m.a.Group,{controlId:this.props.keywordId},r.a.createElement(m.a.Label,null,"Keyword:"),r.a.createElement(m.a.Control,{type:"keyword",onChange:this.props.keywordChangeHandler,placeholder:"Enter keyword"}),r.a.createElement(m.a.Text,{className:"text-muted"},"Keyword is needed!")),r.a.createElement(m.a.Group,{controlId:this.props.inputId},r.a.createElement(m.a.Label,null),r.a.createElement(m.a.Control,{as:"textarea",rows:"3",onChange:this.props.textChangeHandler,placeholder:"Enter Text"}),r.a.createElement(m.a.Text,{className:"text-muted"},"Any characters that are not alphabetical will be ignored and unchanged!")))}}var v=w,x=a(19);class k extends n.Component{constructor(e){super(e),this.handleClick=this.handleClick.bind(this)}handleClick(e){this.props.modeChange(e)}render(){return r.a.createElement(x.a,{type:"button",variant:"primary",onClick:this.handleClick},0===this.props.mode?"Encrypting":"Decrypting")}}var A=k;function T(e){var t=e.toUpperCase().match(/[A-Z]/g),a="ABCDEFGHIJKLMNOPQRSTUVWXYZ",n="";if(t)for(var r=0;r<t.length&&26!==n.length;)n.indexOf(t[r])<0&&(n+=t[r],a=a.replace(t[r],"")),r++;return n.length<26&&(n+=a),n}function I(e,t=0){for(var a="abcdefghijklmnopqrstuvwxyz",n={},r=0;r<e.length;r++)t?n[e.charAt(r)]=a.charAt(r):n[a.charAt(r)]=e.charAt(r);return n}class S extends n.Component{constructor(e){super(e),this.modeChange=this.modeChange.bind(this),this.getOutput=this.getOutput.bind(this),this.handleChange=this.handleChange.bind(this),this.state={mode:0,output:""}}modeChange(e){0===this.state.mode?this.setState({mode:1}):this.setState({mode:0})}getOutput(){let e="";if(null!=document.getElementById("monoalpha-input")&&null!=document.getElementById("monoalpha-keyword")){const t=document.getElementById("monoalpha-input").value,a=document.getElementById("monoalpha-keyword").value;a.match(/[a-zA-Z]/)&&t.match(/[a-zA-Z]/)&&(e=function(e,t,a=0){var n="",r=I(T(e),a);t=a?t.toUpperCase():t.toLowerCase();for(var l=0;l<=t.length;l++)t.charAt(l).match(/[a-zA-Z]/)&&(n+=r[t.charAt(l)]);return n}(a,t,this.state.mode))}return e}handleChange(e){this.setState({output:""})}render(){const e=this.state.mode,t=this.getOutput();return r.a.createElement(c.a,null,r.a.createElement("h1",null,"Monoalphabetic Cipher"),r.a.createElement("p",null,"A monoalphabetic cipher is a substituion cipher. It is done by creating a cipher alphabet based on a keyword."),r.a.createElement("p",null,'This cipher alphabet is created by removing any duplicates after the first appearance of a letter and adding all other letters not included in the keyword to the end. For example, If the keyword was "Cryptology", the resulting cipher alphabet would be "CRYPTOLGABDEFHJKMNPQSUVWXZ".'),r.a.createElement("p",null,'When encrpyting/decrypting we substitute the original letter with the corresponding alphabet. For example, using the same keyword as before, "They\'ve caught on!" would be encrpyted as "QGTXUTYCSLGQIH", while "SHPTMNQIIP" would be decrypted as "understood".'),r.a.createElement("h5",null,"Encrypting/Decrypting"),r.a.createElement(v,{keywordId:"monoalpha-keyword",keywordChangeHandler:this.handleChange,inputId:"monoalpha-input",textChangeHandler:this.handleChange}),r.a.createElement(A,{mode:e,modeChange:this.modeChange}),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement(C,{id:"monoalpha-output",text:t}))}}var O=S;function L(e,t,a=0){var n="",r=function(e,t=0){var a=[];if(e)for(var n=0;n<e.length;n++)a.push(I(e[n],t));return a}(function(e){var t=e.toUpperCase().match(/[A-Z]/g),a="ABCDEFGHIJKLMNOPQRSTUVWXYZ",n=[];if(t)for(var r=0;r<t.length;r++)n.push(y(a,a.indexOf(t[r])));return n}(e),a),l=0;if(r){t=a?t.toUpperCase():t.toLowerCase();for(var o=0;o<t.length;o++)t.charAt(o).match(/[a-zA-Z]/)&&(n+=r[l][t.charAt(o)],l+1<r.length?l++:l=0)}return n}class B extends n.Component{constructor(e){super(e),this.modeChange=this.modeChange.bind(this),this.getOutput=this.getOutput.bind(this),this.handleChange=this.handleChange.bind(this),this.state={mode:0,output:""}}modeChange(e){0===this.state.mode?this.setState({mode:1}):this.setState({mode:0})}getOutput(){let e="";if(null!=document.getElementById("vigenere-input")&&null!=document.getElementById("vigenere-keyword")){const t=document.getElementById("vigenere-input").value,a=document.getElementById("vigenere-keyword").value;a.match(/[a-zA-Z]/)&&t.match(/[a-zA-Z]/)&&(e=L(a,t,this.state.mode))}return e}handleChange(e,t){this.setState({output:""})}render(){const e=this.state.mode,t=this.getOutput();return r.a.createElement(c.a,null,r.a.createElement("h1",null,"Vigenere Cipher"),r.a.createElement("p",null,"A Vigenere cipher is polyalphabetic cipher that encorporates shifts of a caesar cipher."),r.a.createElement("p",null,"The keyword is used to construct the alphabets, each letter uses the shift of the alphabet that the letter starts with. Also it should be noted that duplicate letters are not removed as they are in monoalphabetic substituion ciphers."),r.a.createElement("p",null,'Encrypting/Decrypting is done by using a letters shift to encrypt a character and then using the next shift to encrypt the next charcter and then wrapping back to the beginning when the end of the keyword is reached. For example, the message "Today\'s weather will be bad."encrpyted with the keyword WEATHER will result in "PSDTFWNAETALVNEPLULFRZ". Taking this step by step, t would be encrpyted by the cipheralphabet where W is first, then o by E\'s cipheralphabet and so on until it reaches e which would then be encrypted using W\'s cipheralphabet again as we have wrapped around after reaching the end. Decrypting is done in a similar manner, but backwards.'),r.a.createElement("h5",null,"Encrypting/Decrypting"),r.a.createElement(v,{keywordId:"vigenere-keyword",keywordChangeHandler:this.handleChange,inputId:"vigenere-input",textChangeHandler:this.handleChange}),r.a.createElement(A,{mode:e,modeChange:this.modeChange}),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement(C,{id:"vigenere-output",text:t}))}}var q=B;class N extends n.Component{constructor(e){super(e),this.handleCellChange=this.handleCellChange.bind(this)}handleCellChange(e){}render(){return r.a.createElement(d.a,{responsive:"sm",size:"sm",striped:!0,bordered:!0,className:"playfair-square"},r.a.createElement("tbody",null,z(this.props.square,0,this.props.readOnly),z(this.props.square,1,this.props.readOnly),z(this.props.square,2,this.props.readOnly),z(this.props.square,3,this.props.readOnly),z(this.props.square,4,this.props.readOnly)))}}function z(e,t,a){return r.a.createElement("tr",{key:"playfair-"+t},r.a.createElement("td",null,r.a.createElement(m.a.Control,{as:"input",size:"sm",className:"center",plaintext:a,readOnly:a,value:e[t][0]})),r.a.createElement("td",null,r.a.createElement(m.a.Control,{as:"input",size:"sm",className:"center",plaintext:a,readOnly:a,value:e[t][1]})),r.a.createElement("td",null,r.a.createElement(m.a.Control,{as:"input",size:"sm",className:"center",plaintext:a,readOnly:a,value:e[t][2]})),r.a.createElement("td",null,r.a.createElement(m.a.Control,{as:"input",size:"sm",className:"center",plaintext:a,readOnly:a,value:e[t][3]})),r.a.createElement("td",null,r.a.createElement(m.a.Control,{as:"input",size:"sm",className:"center",plaintext:a,readOnly:a,value:e[t][4]})))}var W=N;function F(e,t,a,n,r){return e[t][r]+e[n][a]}function H(e,t,a,n,r=0){return 0===r?(a+1>4?a-=4:a++,n+1>4?n-=4:n++,e[t][a]+e[t][n]):(a-1<0?a+=4:a--,n-1<0?n+=4:n--,e[t][a]+e[t][n])}function K(e,t,a,n,r=0){return 0===r?(a-1<0?a+=4:a--,n-1<0?n+=4:n--,e[a][t]+e[n][t]):(a+1>4?a-=4:a++,n+1>4?n-=4:n++,e[a][t]+e[n][t])}function G(e,t="j"){let a,n;const r=[];for(e=T(e).toLowerCase().replace(t,""),a=0;a<5;a++)for(r[a]=[],n=0;n<5;n++)r[a][n]=e.charAt(5*a+n);return r}class D extends n.Component{constructor(e){super(e),this.modeChange=this.modeChange.bind(this),this.getOutput=this.getOutput.bind(this),this.handleChange=this.handleChange.bind(this),this.state={mode:0,keyword:""}}modeChange(e){0===this.state.mode?this.setState({mode:1}):this.setState({mode:0})}getOutput(){let e="";if(null!=document.getElementById("playfair-input")&&null!=document.getElementById("playfair-keyword")){const t=document.getElementById("playfair-input").value,a=document.getElementById("playfair-keyword").value;a.match(/[a-zA-Z]/)&&t.match(/[a-zA-Z]/)&&(e=function(e,t,a=0,n="j",r="i"){let l="";const o=G(e),s=function(e){let t,a;const n={},r={};for(t=0;t<5;t++)for(a=0;a<5;a++)n[e[t][a]]=t,r[e[t][a]]=a;return{row:n,col:r}}(o);let i=t.toLowerCase().match(/[a-z]/g);if(0===a&&(i=function(e,t,a){for(let n=0;n<e.length;n+=2)e[n]===t&&(e[n]=a),e[n+1]||("x"===e[n]?e.push("z"):e.push("x")),e[n+1]===t&&(e[n+1]=a),e[n]===e[n+1]&&("x"===e[n]?e.splice(n+1,0,"z"):e.splice(n+1,0,"x"));return e}(i)),i.length%2===0)for(let c=0;c<i.length;c+=2)s.row[i[c]]===s.row[i[c+1]]?l+=H(o,s.row[i[c]],s.col[i[c]],s.col[i[c+1]],a):s.col[i[c]]===s.col[i[c+1]]?l+=K(o,s.col[i[c]],s.row[i[c]],s.row[i[c+1]],a):l+=F(o,s.row[i[c]],s.col[i[c]],s.row[i[c+1]],s.col[i[c+1]]);return a?l:l.toUpperCase()}(a,t,this.state.mode))}return e}handleChange(e,t){const a=document.getElementById("playfair-keyword").value;this.setState({keyword:a})}render(){const e=this.state.mode,t=this.state.keyword,a=this.getOutput();return r.a.createElement(c.a,null,r.a.createElement("h1",null,"Playfair Cipher"),r.a.createElement("p",null,"A Playfair cipher is digraph substitution cipher that uses a square created from a keyword."),r.a.createElement("p",null,"The square is created by removing duplicates after a letter first appears and then filling in a 5x5 square left to right, top to bottom. Similar to monoalphabetic substituion any unused letters follow after in the order they normally appear. Typically J is removed and replaced by I."),r.a.createElement("p",null,"When encrypting, the text must be grouped into digraphs(group of two characters), digraphs may not contain two of the same letters and a filler must be inserted, and if the text is uneven after this another filler is needed at the end. When encrypting a digraph there are rules to follow to get the encrpyted characters. Based on the square:",r.a.createElement("ol",null,r.a.createElement("li",null,"When not in the same row or column, slide to the left/right to other characters column."),r.a.createElement("li",null,"When both are in the same row. Go to the right once."),r.a.createElement("li",null,"When both are in the same column. Go down one.")),"Decrypting is very similar except you go left when in the same row, and go up when in the same column."),r.a.createElement("h5",null,"Encrypting/Decrypting"),r.a.createElement(v,{keywordId:"playfair-keyword",keywordChangeHandler:this.handleChange,inputId:"playfair-input",textChangeHandler:this.handleChange}),r.a.createElement(A,{mode:e,modeChange:this.modeChange}),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement("h3",{className:"center"},"Table Being Used"),r.a.createElement("div",{id:"playfair-table"},r.a.createElement(W,{square:G(t),read_only:!0})),r.a.createElement(C,{id:"playfair-output",text:a}))}}var Z=D,P=a(24),U=a(18),J=a(38);class j extends n.Component{render(){const e=function(e){const t=[],a=Object.values(e).reduce((function(e,t){return e+t}));for(let n=97;n<123;n++)e[String.fromCharCode(n)]||(e[String.fromCharCode(n)]=0),t.push(e[String.fromCharCode(n)]/a*100);return{labels:Object.keys(e).sort(),datasets:[{label:"Text Given Frequencies",data:t,backgroundColor:"rgba(25, 129, 174, 1)",borderWidth:1,borderColor:"#777",hoverBorderWidth:2,hoverBorderColor:"#000"},{label:"Typical Frequencies",data:[8.55,1.6,3.16,3.87,12.1,2.18,2.09,4.96,7.33,.22,.81,4.21,2.53,7.17,7.47,2.07,.1,6.33,6.73,8.94,2.68,1.06,1.83,.19,1.72,.11],backgroundColor:"rgba(57, 188, 1, 1)",borderWidth:1,borderColor:"#777",hoverBorderWidth:2,hoverBorderColor:"#000"}]}}(this.props.letterFreqs);return r.a.createElement(J.a,{data:e,options:{title:{display:!0,text:"Monogram Frequencies"},scales:{xAxes:[{barPercentage:.5,barThickness:10,maxBarThickness:10,minBarLength:2,gridLines:{offsetGridLines:!0},scaleLabel:{display:!0,labelString:"Monograms"}}],yAxes:[{scaleLabel:{display:!0,labelString:"%"}}]}}})}}var M=j;class R extends n.Component{render(){const e=function(e){const t=[],a=Object.values(e).reduce((function(e,t){return e+t})),n=Object.keys(e).sort((function(t,a){return e[a]-e[t]}));return n.forEach((function(n,r){t.push(e[n]/a*100)})),{labels:n,datasets:[{label:"Text Given Frequencies",data:t,backgroundColor:"rgba(25, 129, 174, 1)",borderWidth:1,borderColor:"#777",hoverBorderWidth:2,hoverBorderColor:"#000"}]}}(this.props.data),t={title:{display:!0,text:this.props.title},scales:{xAxes:[{barPercentage:.5,barThickness:10,maxBarThickness:10,minBarLength:2,gridLines:{offsetGridLines:!0},scaleLabel:{display:!0,labelString:"%"}}],yAxes:[{scaleLabel:{display:!0,labelString:this.props.yLabel}}]}};return r.a.createElement(J.b,{data:e,options:t})}}var V=R;function Q(e,t){const a=[];for(let n=0;n<t;n++)a.push({});if(e)for(let n=0;n<e.length;n++)a[n%t][e[n]]?a[n%t][e[n]]+=1:a[n%t][e[n]]=1;return a}function Y(e){const t=Object.values(e).reduce((function(e,t){return e+t}));let a=0;for(let n=0;n<26;n++){const r=e[(10+n).toString(36)];r>0&&(a+=r*(r-1)/(t*(t-1)))}return a}class X extends n.Component{constructor(e){super(e),this.handleSubmit=this.handleSubmit.bind(this),this.state={output:{}}}handleSubmit(){const e=function(e){const t=e.toLowerCase().match(/[a-z]/g),a={},n={},r={};if(t&&t.length>2){for(let l=0;l<t.length-2;l++)a[t[l]]?a[t[l]]+=1:a[t[l]]=1,n[t[l]+t[l+1]]?n[t[l]+t[l+1]]+=1:n[t[l]+t[l+1]]=1,r[t[l]+t[l+1]+t[l+2]]?r[t[l]+t[l+1]+t[l+2]]+=1:r[t[l]+t[l+1]+t[l+2]]=1;const e=t.length;a[t[e-2]]?a[t[e-2]]+=1:a[t[e-2]]=1,a[t[e-1]]?a[t[e-1]]+=1:a[t[e-1]]=1,n[t[e-2]+t[e-1]]?n[t[e-2]+t[e-1]]+=1:n[t[e-2]+t[e-1]]=1}return{monograms:a,digrams:n,trigrams:r}}(document.getElementById("freq-input").value);this.setState({output:e})}render(){const e=this.state.output.monograms,t=this.state.output.digrams,a=this.state.output.trigrams;return r.a.createElement(c.a,null,r.a.createElement(m.a,null,r.a.createElement(m.a.Group,{controlId:"freq-input"},r.a.createElement(m.a.Label,null),r.a.createElement(m.a.Control,{as:"textarea",rows:"3",placeholder:"Enter Text"}),r.a.createElement(m.a.Text,{className:"text-muted"},"Any characters that are not alphabetical will be ignored!"))),r.a.createElement(x.a,{type:"submit",variant:"primary",onClick:this.handleSubmit},"Analyze Text"),e&&r.a.createElement(M,{letterFreqs:e}),t&&r.a.createElement(V,{data:t,yLabel:"Digrams",title:"Digraph Frequencies"}),a&&r.a.createElement(V,{data:a,yLabel:"Trigrams",title:"Trigraph Frequencies"}))}}var _=X,$=a(58);class ee extends n.Component{constructor(e){super(e),this.handleSubmit=this.handleSubmit.bind(this),this.state={output:[]}}handleSubmit(){let e=["Sorry not enough characters. Need at least 40 characters."];const t=document.getElementById("ioc-input").value,a=t?t.toLowerCase().match(/[a-z]/g):null;a&&a.length>=40&&(e=function(e){const t=[];for(let a=1;a<=20;a++){let n=Q(e,a);n=n.map(e=>Y(e)),t.push(n.reduce((e,t)=>e+t)/a)}return t}(a)),this.setState({output:e})}render(){const e={};let t=[];this.state.output.forEach((t,a)=>e[a]=Math.abs(.0667-t)),e&&(t=Object.keys(e).sort((function(t,a){return e[t]-e[a]})));const a=this.state.output.map((t,a)=>r.a.createElement($.a.Item,null,"Length:",a+1,"  IoC: ",t,"  Difference: \xb1",e[a]));return r.a.createElement(c.a,null,r.a.createElement(m.a,null,r.a.createElement(m.a.Group,{controlId:"ioc-input"},r.a.createElement(m.a.Label,null),r.a.createElement(m.a.Control,{as:"textarea",rows:"3",placeholder:"Enter Text"}),r.a.createElement(m.a.Text,{className:"text-muted"},"Any characters that are not alphabetical will be ignored!"))),r.a.createElement(x.a,{type:"submit",variant:"primary",onClick:this.handleSubmit},"Calculate Likely Key-Lengths"),r.a.createElement($.a,null,a),t&&r.a.createElement("p",null,"Sorted List of Lengths Closest to Normal English IoC: ",t))}}var te=ee;class ae extends n.Component{render(){return r.a.createElement(c.a,null,r.a.createElement("h1",null,"Tools"),r.a.createElement("p",null,"These are tools that can help when attempting to decrypt a message."),r.a.createElement("h5",null,"Frequency Analysis"),r.a.createElement("p",null,"Frequency analysis will provide the frequencies of a letter's appearance and the frequencies of the digraphs(two letter combinations) and trigraphs (three letter combinations)."),r.a.createElement("h5",null,"Index Of Coincidence"),r.a.createElement("p",null,"Index of coincidence is a technique used for cryptanalzing a Vigenere cipher. You can learn more about it\xa0",r.a.createElement("a",{href:"https://en.wikipedia.org/wiki/Index_of_coincidence"},"here"),". The expected Index of coincidence of english is 0.0667."),r.a.createElement(P.a,null,r.a.createElement(U.a,null,r.a.createElement(P.a.Toggle,{as:U.a.Header,eventKey:"0"},"Frequency Analysis"),r.a.createElement(P.a.Collapse,{eventKey:"0"},r.a.createElement(U.a.Body,null,r.a.createElement(_,null)))),r.a.createElement(U.a,null,r.a.createElement(P.a.Toggle,{as:U.a.Header,eventKey:"1"},"Index Of Coincidence"),r.a.createElement(P.a.Collapse,{eventKey:"1"},r.a.createElement(U.a.Body,null,r.a.createElement(te,null))))))}}var ne=ae;class re extends n.Component{render(){return r.a.createElement("div",null,r.a.createElement(s.a,{defaultActiveKey:"home",id:"tab"},r.a.createElement(i.a,{eventKey:"home",title:"Home"},r.a.createElement(u,null)),r.a.createElement(i.a,{eventKey:"caesar",title:"Caesar"},r.a.createElement(f,null)),r.a.createElement(i.a,{eventKey:"monoalpha",title:"Monoalphabetic"},r.a.createElement(O,null)),r.a.createElement(i.a,{eventKey:"vigenere",title:"Vigenere"},r.a.createElement(q,null)),r.a.createElement(i.a,{eventKey:"playfair",title:"Playfair"},r.a.createElement(Z,null)),r.a.createElement(i.a,{eventKey:"tools",title:"Tools"},r.a.createElement(ne,null))))}}var le=re;a(181);class oe extends n.Component{render(e){return r.a.createElement("div",{className:"App"},r.a.createElement(le,null))}}var se=oe;Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(se,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(e=>{e.unregister()})},78:function(e,t,a){e.exports=a(182)},83:function(e,t,a){}},[[78,1,2]]]);
//# sourceMappingURL=main.0bc6f21e.chunk.js.map